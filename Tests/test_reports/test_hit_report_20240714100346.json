{"created": 1720940660.5792594, "duration": 31.620010137557983, "exitcode": 1, "root": "C:\\Users\\Administrator\\Automation\\Tests", "environment": {}, "summary": {"failed": 1, "total": 1, "collected": 1}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_hit.py", "type": "Module"}]}, {"nodeid": "test_hit.py::TestSqlQuery", "outcome": "passed", "result": []}, {"nodeid": "test_hit.py", "outcome": "passed", "result": [{"nodeid": "test_hit.py::TestSqlQuery", "type": "Class"}, {"nodeid": "test_hit.py::test_hit_payment", "type": "Coroutine", "lineno": 12}]}], "tests": [{"nodeid": "test_hit.py::test_hit_payment", "lineno": 12, "outcome": "failed", "keywords": ["test_hit_payment", "asyncio", "regression", "pytestmark", "test_hit.py", "__init__.py", "Tests"], "setup": {"duration": 0.23689980013296008, "outcome": "passed"}, "call": {"duration": 31.33129939995706, "outcome": "failed", "crash": {"path": "C:\\Users\\Administrator\\Automation\\Tests\\test_hit.py", "lineno": 92, "message": "assert 0 == 1"}, "traceback": [{"path": "test_hit.py", "lineno": 92, "message": "AssertionError"}], "stdout": "<Page url='https://demo2.okoora.com/login'>\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6ImRlZmRkYjRhLWEwNTAtNGFmZC1iZWJjLTJiYjdjZmQ3YTZhMyIsIkVtYWlsIjoiZmV0ZWIxNzcxNUByYW5kcmFpLmNvbSIsIlVzZXJOYW1lIjoiZmV0ZWIxNzcxNUByYW5kcmFpLmNvbSIsIlVzZXJJZCI6ImRlZmRkYjRhLWEwNTAtNGFmZC1iZWJjLTJiYjdjZmQ3YTZhMyIsIkFjY291bnRJZCI6IjU0Yzg3ZDE5LTI4NDQtNDgyMS04YWJkLTgzMGY1ZGI5MGY1YiIsIlByb2ZpbGVJZCI6IjE1NjQiLCJBY2NvdW50TmFtZSI6ImZldGViIHRlc3QgYml6IiwiRmlyc3ROYW1lIjoiZmV0ZWIgdGVzdCIsIkxhc3ROYW1lIjoidGVzdCIsIklwQWRkcmVzcyI6Ijk0LjI1MC4yMDMuMTI0IiwiQ291bnRyeSI6ImlsIiwiQWNjb3VudFJlZ3VsYXRvcklkIjoiNzg4MDY0NTMwMDAiLCJBY2NvdW50VHlwZSI6IkNvbXBhbnkiLCJQaG9uZU51bWJlciI6Ijk3MjA5MjEwMDEwMDAiLCJQYWNrYWdlVHlwZSI6IlByaW1lIiwiUGxhbkVuZERhdGUiOiIxLzE4LzIwMjUgMzowMzo1NiBQTSIsIlByb2ZpbGVBY3RpdmF0ZVN0YXR1cyI6ImFwcHJvdmVkIiwiU2l0ZVNvdXJjZSI6Ik9rb29yYSIsIkVsaWdpYmxlIjoiVHJ1ZSIsImxpbWl0c0Rpc2NsYWltZXJBcHByb3ZhbCI6IlRydWUiLCJDY0FjY291bnRJZCI6IjQ4NzdlODk1LWY1MmUtNDRiMC1iZDI4LWM3NTMzMDg5MDEzMSIsIkNjQ29udGFjdElkIjoiMmRkMTk0MWYtYTEyZi00NmM0LWEyYTItYWNiNTA1ZjU5NTRmIiwiQXdBY2NvdW50SWQiOiJhY2N0X21nSkkzbjFLT0JDY0hhWDJjZmt5WmciLCJBZmZpbGlhdGVDb3VudHJ5IjoiaWwiLCJSaXNrTGV2ZWwiOiJ7XCJUeXBlXCI6XCJBXCIsXCJMZXZlbE5hbWVcIjpcIkxvd1wifSIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6IkFkbWluIiwiZXhwIjoxNzIwOTQ0MjM5LCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjQyMDAiLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjQyMDAifQ.xj0S1vGkSCIPWO5OkiVmfhdyD95IDus3lgwO3-iuE4c\nWaiting for response...\nResponse received.\nWaiting for response...\nResponse received.\nWaiting for response...\nResponse received.\nWaiting for response...\nResponse received.\nWaiting for response...\nResponse received.\n1.12\n1025\nRequest URL: Exposures/UpdateExposureTarget?exposureId=1025&newTargetRate=0.8200000000000001\nAuthorization Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6ImRlZmRkYjRhLWEwNTAtNGFmZC1iZWJjLTJiYjdjZmQ3YTZhMyIsIkVtYWlsIjoiZmV0ZWIxNzcxNUByYW5kcmFpLmNvbSIsIlVzZXJOYW1lIjoiZmV0ZWIxNzcxNUByYW5kcmFpLmNvbSIsIlVzZXJJZCI6ImRlZmRkYjRhLWEwNTAtNGFmZC1iZWJjLTJiYjdjZmQ3YTZhMyIsIkFjY291bnRJZCI6IjU0Yzg3ZDE5LTI4NDQtNDgyMS04YWJkLTgzMGY1ZGI5MGY1YiIsIlByb2ZpbGVJZCI6IjE1NjQiLCJBY2NvdW50TmFtZSI6ImZldGViIHRlc3QgYml6IiwiRmlyc3ROYW1lIjoiZmV0ZWIgdGVzdCIsIkxhc3ROYW1lIjoidGVzdCIsIklwQWRkcmVzcyI6Ijk0LjI1MC4yMDMuMTI0IiwiQ291bnRyeSI6ImlsIiwiQWNjb3VudFJlZ3VsYXRvcklkIjoiNzg4MDY0NTMwMDAiLCJBY2NvdW50VHlwZSI6IkNvbXBhbnkiLCJQaG9uZU51bWJlciI6Ijk3MjA5MjEwMDEwMDAiLCJQYWNrYWdlVHlwZSI6IlByaW1lIiwiUGxhbkVuZERhdGUiOiIxLzE4LzIwMjUgMzowMzo1NiBQTSIsIlByb2ZpbGVBY3RpdmF0ZVN0YXR1cyI6ImFwcHJvdmVkIiwiU2l0ZVNvdXJjZSI6Ik9rb29yYSIsIkVsaWdpYmxlIjoiVHJ1ZSIsImxpbWl0c0Rpc2NsYWltZXJBcHByb3ZhbCI6IlRydWUiLCJDY0FjY291bnRJZCI6IjQ4NzdlODk1LWY1MmUtNDRiMC1iZDI4LWM3NTMzMDg5MDEzMSIsIkNjQ29udGFjdElkIjoiMmRkMTk0MWYtYTEyZi00NmM0LWEyYTItYWNiNTA1ZjU5NTRmIiwiQXdBY2NvdW50SWQiOiJhY2N0X21nSkkzbjFLT0JDY0hhWDJjZmt5WmciLCJBZmZpbGlhdGVDb3VudHJ5IjoiaWwiLCJSaXNrTGV2ZWwiOiJ7XCJUeXBlXCI6XCJBXCIsXCJMZXZlbE5hbWVcIjpcIkxvd1wifSIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6IkFkbWluIiwiZXhwIjoxNzIwOTQ0MjM5LCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjQyMDAiLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjQyMDAifQ.xj0S1vGkSCIPWO5OkiVmfhdyD95IDus3lgwO3-iuE4c\nResponse Status: 200\nResponse Text: 1025\n(0,)\n", "longrepr": "page = <Page url='https://demo2.okoora.com/payments'>\nget_url = {'db_schem': 'ofakimdb_Copy', 'mail': 'feteb17715@randrai.com', 'password': 'Okoora1!', 'url': 'https://demo2.okoora.com/login/', ...}\nsql_query = <utilities.DB.TestSqlQuery object at 0x0000021D948AA9D0>\n\n    @pytest.mark.regression\n    @pytest.mark.asyncio(scope='session')\n    async def test_hit_payment(page, get_url, sql_query):\n        user_data = get_url\n        url = user_data['url']\n        user_mail = user_data['mail']\n        password = user_data['password']\n    \n        async def on_chooser(file_chooser):\n            await file_chooser.set_files(\"Upload.pdf\")\n            print(\"File uploaded\")\n    \n        async def on_response(response):\n            try:\n                if \"BalanceList\" in response.url:\n                    print(\"Waiting for response...\")\n                    result = await asyncio.wait_for(response.json(), timeout=5.0)\n                    print(\"Response received.\")\n            except asyncio.TimeoutError:\n                print(\"Response took more than 5 seconds.\")\n    \n            if response.url == \"https://okoora-demo-api2023.azurewebsites.net/api/Authentication/login\":\n                result = await response.json()\n                hit_data['access_Token'] = str(result['accessToken'])\n                print(hit_data['access_Token'])\n            if response.url == \"https://okoora-demo-api2023.azurewebsites.net/api/Rates/AlertSpotAndRate?pair=EURUSD&direction=2\":\n                temp_spot = await response.json()\n                hit_data['spot'] = round(float(temp_spot), 2) + 0.01\n                print(hit_data['spot'])\n            if response.url == \"https://okoora-demo-api2023.azurewebsites.net/api/Exposures/CreateExposure\":\n                exposureID_result = await response.json()\n                hit_data['exposureID'] = exposureID_result['exposureID']\n                print(hit_data['exposureID'])\n    \n        async def on_load(load):\n            print(load)\n    \n        async with async_playwright() as playwright:\n            browser = await playwright.chromium.launch(headless=False)\n            context = await browser.new_context(\n                viewport={'width': 1920, 'height': 1080}  # Maximize window size\n            )\n            page = await context.new_page()\n    \n            page.on(\"filechooser\", on_chooser)\n            page.on(\"response\", on_response)\n            page.on(\"load\", on_load)\n    \n            await page.goto(url, wait_until=\"load\")\n            await page.locator(\"//input[@name='username']\").type(user_mail)\n            await page.locator(\"//input[@name='password']\").fill(password)\n            await page.get_by_role(\"button\", name=\"Log In \").click()\n    \n            await page.locator(\"//span[text()='Payments']\").click()\n            await page.get_by_role(\"button\", name=\"Exchange\").click()\n            await page.get_by_text(\"Future exchange\").click()\n            await page.locator(\"//button[@aria-label='Open calendar']\").nth(1).click()\n            await page.locator(\"button.mat-calendar-body-active\").click()\n            await page.get_by_text(\"Next\").click()\n            await asyncio.sleep(2)\n            await page.locator(\"//mat-select[@name='currency']\").nth(0).click()\n            await page.locator(\"//span[text()=' EUR']\").click()\n    \n            await page.locator(\"//input[@formcontrolname='buyAmount']\").click()\n            await page.locator(\"//input[@formcontrolname='buyAmount']\").type(\"100\")\n            await page.keyboard.press('Tab')\n    \n            await asyncio.sleep(2)\n    \n            await page.locator(\"//input[@formcontrolname='spotRate']\").click()\n            await page.locator(\"//input[@formcontrolname='spotRate']\").fill(str(hit_data['spot']))\n            await asyncio.sleep(2)\n            await page.locator(\"//input[@id='termsCondition-checkbox-input']\").click()\n            await page.locator(\"//label[@for='mat-mdc-checkbox-3-input']\").click()\n            await page.locator(\"//button[@id='nextBtn']\").click()\n            await asyncio.sleep(2)\n            await run(playwright)\n            sql = sql_query\n            raw_num = sql.check_status(str(hit_data['exposureID']))\n>           assert raw_num == 1\nE           assert 0 == 1\n\ntest_hit.py:92: AssertionError"}, "teardown": {"duration": 0.0012076999992132187, "outcome": "passed"}}], "warnings": [{"message": "There is no current event loop", "category": "DeprecationWarning", "when": "runtest", "filename": "C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pytest_asyncio\\plugin.py", "lineno": 894}, {"message": "There is no current event loop", "category": "DeprecationWarning", "when": "runtest", "filename": "C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pytest_asyncio\\plugin.py", "lineno": 676}]}